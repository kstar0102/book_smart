{"version":3,"sources":["useAPI.js"],"names":["_axios","_interopRequireDefault","require","_asyncStorage","Signup","userData","response","regeneratorRuntime","async","_context","prev","next","awrap","axios","post","sent","abrupt","data","t0","stop","Signin","credentials","endpoint","_context2","concat","token","AsyncStorage","setItem","_context3","getItem","console","error"],"mappings":"uIAAA,IAAAA,OAAAC,uBAAAC,QAAA,YACAC,cAAAF,uBAAAC,QAAA,sHAEO,IAAME,OAAS,SAAOC,GAAP,IAAAC,EAAA,OAAAC,mBAAAC,MAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAAA,OAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAAAJ,mBAAAK,MAEKC,OAAAA,QAAMC,KAAK,UAAWT,IAF3B,KAAA,EAAA,OAEZC,EAFYG,EAAAM,KAAAN,EAAAO,OAAA,SAGXV,EAASW,MAHE,KAAA,EAAA,MAAAR,EAAAC,KAAA,EAAAD,EAAAS,GAAAT,EAAA,MAAA,GAAAA,EAAAS,GAAA,KAAA,GAAA,IAAA,MAAA,OAAAT,EAAAU,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA,4BASf,IAAMC,OAAS,SAAOC,EAAaC,GAApB,IAAAhB,EAAA,OAAAC,mBAAAC,MAAA,SAAAe,GAAA,OAAA,OAAAA,EAAAb,KAAAa,EAAAZ,MAAA,KAAA,EAAA,OAAAY,EAAAb,KAAA,EAAAa,EAAAZ,KAAA,EAAAJ,mBAAAK,MATAC,OAAAA,QAAAC,KAAA,IAAAU,OAAAF,EAAA,WAAAD,IASA,KAAA,EAAA,IATAf,EASAiB,EAAAR,MATAE,KAAAQ,MASA,OAAAF,EAAAZ,KAAA,EAAAJ,mBAAAK,MATAc,cAAAA,QAAAC,QAAA,QAAArB,EAAAW,KAAAQ,QASAF,EAAAZ,KAAA,EAAA,MAAA,KAAA,EAAA,OAAAY,EAAAP,OAAA,SATAV,EAAAW,MASA,KAAA,GAAA,MAAAM,EAAAb,KAAA,GAAAa,EAAAL,GAAAK,EAAA,MAAA,GAAAA,EAAAL,GAAA,KAAA,GAAA,IAAA,MAAA,OAAAK,EAAAJ,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA,6BAPZb,IAAAA,sBAFY,WAAA,IAAAmB,EAAA,OAAAlB,mBAAAC,MAAA,SAAAoB,GAAA,OAAA,OAAAA,EAAAlB,KAAAkB,EAAAjB,MAAA,KAAA,EAAA,OAAAiB,EAAAlB,KAAA,EAAAkB,EAAAjB,KAAA,EAAAJ,mBAAAK,MAuBEc,cAAAA,QAAaG,QAAQ,UAvBvB,KAAA,EAAA,OAuBZJ,EAvBYG,EAAAb,KAAAa,EAAAZ,OAAA,SAAA,OAAAS,GAAA,KAAA,EAAA,OAAAG,EAAAlB,KAAA,EAAAkB,EAAAV,GAAAU,EAAA,MAAA,GAAAE,QAAAC,MAAA,4CAAAH,EAAAV,IAAAU,EAAAZ,OAAA,UAAA,GAAA,KAAA,GAAA,IAAA,MAAA,OAAAY,EAAAT,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA","file":"useAPI.min.js","sourcesContent":["import axios from './axios';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\nexport const Signup = async (userData) => {\r\n  try {\r\n    const response = await axios.post('/signup', userData);\r\n    return response.data;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const Signin = async (credentials, endpoint) => {\r\n  try {\r\n    const response = await axios.post(`/${endpoint}/signin`, credentials);\r\n    if (response.data.token) {\r\n      await AsyncStorage.setItem('token', response.data.token);\r\n    }\r\n    return response.data;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n}\r\n\r\nexport const isTokenInLocalStorage = async () => {\r\n  try {\r\n    const token = await AsyncStorage.getItem('token');\r\n    return token !== null;\r\n  } catch (error) {\r\n    console.error('Error checking for token in localstorage:', error);\r\n    return false;\r\n  }\r\n}"]}